# This is a basic workflow to help you get started with Actions

name: Build

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for all branches
  push:
  pull_request:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build_latex"
  build_latex:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    container:
      image: registry.gitlab.com/islandoftex/images/texlive:latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Set up Git repository
        uses: actions/checkout@v3

      # 2. Install additional dependencies
      - run: apt-get update && apt-get install -y librsvg2-bin rsync

      # 3. Setup TU-Logo by converting it to pdf and copying it to the template directory
      - name: "Setup TU-Logo"
        run: |
          mkdir -p "$(kpsewhich -var-value=TEXMFHOME)/tex/latex/local"
          curl -o tuda_logo.svg -L https://upload.wikimedia.org/wikipedia/de/2/24/TU_Darmstadt_Logo.svg\?download
          rsvg-convert -f pdf -o tuda_logo.pdf tuda_logo.svg
          mv tuda_logo.pdf "$(kpsewhich -var-value=TEXMFHOME)/tex/latex/local"
          texhash --verbose
      
      # 4. Install algotex
      - name: "Install AlgoTeX-template"
        run: |
          git clone https://github.com/tudalgo/AlgoTeX.git
          cd AlgoTeX
          l3build install

      # 6. Build the document
      - name: "Build the document"
        run: |
          make
          mv build/*.pdf .

      - if: ${{ env.ACT }}
        name: Hack container for local development
        run: apt-get install -y nodejs

      # 7. Upload artifacts to GitHub
      - name: Upload artifacts to GitHub
        uses: actions/upload-artifact@v3
        with:
          name: LaTeX-Workshop Folien
          path: "*.pdf"
          if-no-files-found: error
      
      # 8. Get Date
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H-%M-%S.%N')"

      #9 create a release
      - name: Create a release
        if: ${{ !env.ACT && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name == 'push' }}
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: snapshot-${{ steps.date.outputs.date }}
          name: snapshot-release-${{ steps.date.outputs.date }}
          files: "*.pdf"
          fail_on_unmatched_files: true
          draft: false
          prerelease: false
